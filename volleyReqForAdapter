RequestQueue queue = Volley.newRequestQueue(getActivity());
        JsonArrayRequest requestUrl=new JsonArrayRequest(Request.Method.POST, url, null,new Response.Listener<JSONArray>() {
            @Override
            public void onResponse(JSONArray response) {
                for(int i=0;i< response.length();i++){




                    try {
//                        String name = response.getJSONObject(i).getString("name");
//                        String surname= response.getJSONObject(i).getString("surname");
//                        String ph_no=response.getJSONObject(i).getString("ph_no");
//                        String dob=response.getJSONObject(i).getString("date_of_birth");
//                        members.add(new AllMembersRecyclerRepresent(name,surname,ph_no,dob));
//                        myAdapter.notifyDataSetChanged();
                        JSONObject jsonObject = response.getJSONObject(i);
                        AllMembersRecyclerRepresent ar= new AllMembersRecyclerRepresent();
                        ar.setName( jsonObject.getString("name"));
                        ar.setSurname( jsonObject.getString("surname"));
                        ar.setPh_no( jsonObject.getString("ph_no"));
                        String id=( jsonObject.getString("member_id"));
                        String email=( jsonObject.getString("email"));
                        String is_active=( jsonObject.getString("is_active"));
                        String dob=( jsonObject.getString("date_of_birth"));
                        String medical_history=( jsonObject.getString("medical_history"));

                        DateTimeFormatter formatter = DateTimeFormat.forPattern("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
                        LocalDate date = org.joda.time.LocalDate.parse(dob, formatter);
                        ar.setDOB(String.valueOf(date));
                        Log.d("date:",String.valueOf(date));
                        ar.setId(id);
                        ar.setDOB(String.valueOf(date));
                        ar.setEmail(email);
                        ar.setIs_active(is_active);
                        ar.setMedical_history(medical_history);
                        ar.setIs_active(is_active);
                        members.add(ar);




                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    myAdapter.notifyDataSetChanged();


                }

                pg.cancel();

            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Toast.makeText(getContext(), error+"Something went wrong.\nPlease check your internet connection", Toast.LENGTH_LONG).show();
                pg.cancel();
            }
        });

        MySingleton.getInstance(getActivity()).addRequestQueue(requestUrl);